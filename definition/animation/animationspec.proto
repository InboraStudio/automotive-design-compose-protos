// Copyright 2025 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

import "google/protobuf/duration.proto";
import "google/protobuf/empty.proto";

package designcompose.definition.animation;

// Corresponds to crates/framework/customizations/src/lib.rs:AnimationSpec
message AnimationSpec {
    optional google.protobuf.Duration initial_delay = 1;
    Animations animation = 2;
    optional StopType interrupt_type = 3;
}

// Corresponds to crates/framework/harry-animation/src/api.rs:StopType
message StopType {
    oneof type {
        google.protobuf.Empty reset_to_start = 1;
        google.protobuf.Empty complete = 2;
        float complete_with_progress = 3;
        google.protobuf.Empty stop = 4;
    }
}

// Corresponds to crates/framework/harry-animation/src/animations.rs:Animations
message Animations {
    oneof type {
        SmoothAnimation smooth = 1;
        KeyFrameAnimation key_frame = 2;
    }
}

// Corresponds to crates/framework/harry-animation/src/smooth_animation.rs:SmoothAnimation
message SmoothAnimation {
    google.protobuf.Duration duration = 1;
    RepeatType repeat_type = 2;
    Easing easing = 3;
}

// Corresponds to crates/framework/harry-animation/src/key_frame_animation.rs:KeyFrameAnimation
message KeyFrameAnimation {
    repeated KeyFrame steps = 1;
    RepeatType repeat_type = 2;
}

// Corresponds to crates/framework/harry-animation/src/api.rs:RepeatType
message RepeatType {
    oneof type {
        google.protobuf.Empty no_repeat = 1;
        uint32 repeat = 2; // Corresponds to Repeat(u32)
        google.protobuf.Empty loop_forever = 3;
    }
}

// Corresponds to crates/framework/harry-animation/src/key_frame_animation.rs:KeyFrame
message KeyFrame {
    float value = 1;
    google.protobuf.Duration duration = 2;
}

// Corresponds to crates/framework/harry-animation/src/smooth_animation.rs:Easing
message Easing {
    oneof type {
        google.protobuf.Empty linear = 1;
        BezierCurve bezier = 2;
    }
}

// Corresponds to crates/framework/harry-animation/src/smooth_animation.rs:BezierCurve
message BezierCurve {
    float p0 = 1;
    float p1 = 2;
    float p2 = 3;
    float p3 = 4;
}

message AnimationOverride {
    oneof animation_override {
        google.protobuf.Empty no_override = 1;
        google.protobuf.Empty disable_animations = 2;
        AnimationSpec custom = 3;
    }
}
